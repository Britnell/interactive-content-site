---
import Switcher from "./switcher.astro";

type Blok = {
  component: string;
  [field: string]: any;
};
interface Props {
  blok: Blok;
}

const { blok } = Astro.props;
---

<style is:global>
  .carousel > * {
    border: 4px solid transparent;
  }

  .carousel-0 > *:nth-child(1) {
    border-color: red;
  }
  .carousel-1 > *:nth-child(2) {
    border-color: red;
  }
  .carousel-2 > *:nth-child(3) {
    border-color: red;
  }
</style>
<script is:inline>
  document.addEventListener("alpine:init", () => {
    Alpine.data("carousel", () => ({
      count: 0,
      next() {
        this.count = (this.count + 1) % 3;
      },
    }));
  });
</script>
<div x-data="carousel">
  <div class="px-6 max-w-[1400px] mx-auto mb-8">
    Carousel item <span x-text="count"></span>
    <button class="ml-8 bg-white text-black rounded-md px-2 py-1" @click="next">
      Next
    </button>
  </div>
  <div
    class="px-6 grid grid-cols-[repeat(auto-fit,minmax(400px,1fr))] gap-6 max-w-[1400px] mx-auto carousel"
    :class="`carousel-${count}`"
  >
    {blok.columns.map((bl: Blok) => <Switcher blok={bl} />)}
  </div>
</div>
